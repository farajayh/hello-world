# This config is equivalent to both the '.circleci/extended/orb-free.yml' and the base '.circleci/config.yml'
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/2.0/orb-intro/
orbs:
  node: circleci/node@4.7

commands: # a reusable command with parameters
  print_pipeline_id:
    steps:
      - run: echo "Hello $CIRCLE_WORKFLOW_ID"
  
jobs:
  print_hello:
    docker: 
      - image: cimg/node:17.2.0
    steps:
      - run: return 1
      - run: echo "Hello"
      - print_pipeline_id
      - run:
          command: echo "Hello Error"
          when: on_fail
        
  print_world:
    docker: 
      - image: cimg/node:17.2.0
    steps:
      - run: echo "World"
  print_name:
    docker:
      - image: cimg/node:17.2.0
    steps:
      - run: echo " My name is " $MY_NAME
  save_hello_world_output:
    docker:
      - image: cimg/node:17.2.0
    steps:
      - run: echo "Hello World!" > ~/output.txt
      - persist_to_workspace:
          root: ~/
          paths:
            - output.txt

  print_output_file:
    docker: 
      - image: cimg/node:17.2.0
    steps:
      - attach_workspace:
          at: ~/
      - run: cat ~/output.txt


      

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  sample: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - print_hello
      - print_world:
          requires: [print_hello]
      - print_name
      - save_hello_world_output
      - print_output_file:
          requires: [save_hello_world_output]
      
